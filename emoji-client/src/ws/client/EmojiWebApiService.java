
package ws.client;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.7-b01
 * Generated source version: 2.2
 */
@WebServiceClient(name = "EmojiWebApiService", targetNamespace = "http://server.ws/", wsdlLocation = "http://localhost:9000/EmojiWebApi?wsdl")
public class EmojiWebApiService
        extends Service {

    private final static URL EMOJIWEBAPISERVICE_WSDL_LOCATION;
    private final static WebServiceException EMOJIWEBAPISERVICE_EXCEPTION;
    private final static QName EMOJIWEBAPISERVICE_QNAME = new QName("http://server.ws/", "EmojiWebApiService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:9000/EmojiWebApi?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        EMOJIWEBAPISERVICE_WSDL_LOCATION = url;
        EMOJIWEBAPISERVICE_EXCEPTION = e;
    }

    public EmojiWebApiService() {
        super(__getWsdlLocation(), EMOJIWEBAPISERVICE_QNAME);
    }

    public EmojiWebApiService(WebServiceFeature... features) {
        super(__getWsdlLocation(), EMOJIWEBAPISERVICE_QNAME, features);
    }

    public EmojiWebApiService(URL wsdlLocation) {
        super(wsdlLocation, EMOJIWEBAPISERVICE_QNAME);
    }

    public EmojiWebApiService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, EMOJIWEBAPISERVICE_QNAME, features);
    }

    public EmojiWebApiService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public EmojiWebApiService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    private static URL __getWsdlLocation() {
        if (EMOJIWEBAPISERVICE_EXCEPTION != null) {
            throw EMOJIWEBAPISERVICE_EXCEPTION;
        }
        return EMOJIWEBAPISERVICE_WSDL_LOCATION;
    }

    /**
     * @return returns EmojiWebApi
     */
    @WebEndpoint(name = "EmojiWebApiPort")
    public EmojiWebApi getEmojiWebApiPort() {
        return super.getPort(new QName("http://server.ws/", "EmojiWebApiPort"), EmojiWebApi.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns EmojiWebApi
     */
    @WebEndpoint(name = "EmojiWebApiPort")
    public EmojiWebApi getEmojiWebApiPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://server.ws/", "EmojiWebApiPort"), EmojiWebApi.class, features);
    }

}
