
package ws.client;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import java.util.List;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.7-b01
 * Generated source version: 2.2
 */
@WebService(name = "EmojiWebApi", targetNamespace = "http://server.ws/")
@XmlSeeAlso({
        ObjectFactory.class
})
public interface EmojiWebApi {


    /**
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "update", targetNamespace = "http://server.ws/", className = "ws.client.Update")
    @ResponseWrapper(localName = "updateResponse", targetNamespace = "http://server.ws/", className = "ws.client.UpdateResponse")
    @Action(input = "http://server.ws/EmojiWebApi/updateRequest", output = "http://server.ws/EmojiWebApi/updateResponse")
    void update(
            @WebParam(name = "arg0", targetNamespace = "")
                    Emoji arg0);

    /**
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "save", targetNamespace = "http://server.ws/", className = "ws.client.Save")
    @ResponseWrapper(localName = "saveResponse", targetNamespace = "http://server.ws/", className = "ws.client.SaveResponse")
    @Action(input = "http://server.ws/EmojiWebApi/saveRequest", output = "http://server.ws/EmojiWebApi/saveResponse")
    void save(
            @WebParam(name = "arg0", targetNamespace = "")
                    Emoji arg0);

    /**
     * @param arg0
     * @return returns ws.client.Emoji
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findById", targetNamespace = "http://server.ws/", className = "ws.client.FindById")
    @ResponseWrapper(localName = "findByIdResponse", targetNamespace = "http://server.ws/", className = "ws.client.FindByIdResponse")
    @Action(input = "http://server.ws/EmojiWebApi/findByIdRequest", output = "http://server.ws/EmojiWebApi/findByIdResponse")
    Emoji findById(
            @WebParam(name = "arg0", targetNamespace = "")
                    int arg0);

    /**
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "deleteById", targetNamespace = "http://server.ws/", className = "ws.client.DeleteById")
    @ResponseWrapper(localName = "deleteByIdResponse", targetNamespace = "http://server.ws/", className = "ws.client.DeleteByIdResponse")
    @Action(input = "http://server.ws/EmojiWebApi/deleteByIdRequest", output = "http://server.ws/EmojiWebApi/deleteByIdResponse")
    void deleteById(
            @WebParam(name = "arg0", targetNamespace = "")
                    int arg0);

    /**
     * @return returns java.util.List<ws.client.Emoji>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getEmojis", targetNamespace = "http://server.ws/", className = "ws.client.GetEmojis")
    @ResponseWrapper(localName = "getEmojisResponse", targetNamespace = "http://server.ws/", className = "ws.client.GetEmojisResponse")
    @Action(input = "http://server.ws/EmojiWebApi/getEmojisRequest", output = "http://server.ws/EmojiWebApi/getEmojisResponse")
    List<Emoji> getEmojis();

}
